server:
  port: 8084

spring:
  jpa:
    database: mysql
    show-sql: true
    hibernate:
      ddl-auto: create-drop

  shardingsphere:
    datasource:
      names: master
      # 数据源
      master:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds_0?characterEncoding=utf-8
        username: root
        password: root
    # 分表配置
    sharding:
      tables:
        user:
          actualDataNodes: master.user_$->{0..4}
          key-generator:
            column: id
            type: SNOWFLAKE
          # 自定义分表算法
          tableStrategy:
            standard:
              shardingColumn: add_time
              preciseAlgorithmClassName: com.cxytiandi.sharding.algorithm.MyPreciseShardingAlgorithm
              rangeAlgorithmClassName: com.cxytiandi.sharding.algorithm.MsgHistoryRangeShardingAlgorithm






# inline 表达式
#spring.shardingsphere.sharding.tables.user.table-strategy.inline.sharding-column=id
#spring.shardingsphere.sharding.tables.user.table-strategy.inline.algorithm-expression=user_${id.longValue() % 4}

# 雪花算法
# 用在分布式系统中时，需要注意数据中心标识和机器标识必须唯一，这样就能保证每个节点生成的ID都是唯一的。
#数据中心
idWorker:
  datacenterId: 1
  #机器标识
  machineId: 1