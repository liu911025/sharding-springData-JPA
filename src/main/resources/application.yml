server:
  port: 9000

spring:
  jpa:
    database: mysql
    show-sql: true
    hibernate:
      ddl-auto: none

  shardingsphere:
    datasource:
      names: ds0,ds1
      # 数据源
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds0?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
        username: root
        password: root
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds1?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
        username: root
        password: root
    # 分表配置
    sharding:
      tables:
        user:
          actualDataNodes: ds$->{0..1}.user_$->{0..4}
          database-strategy:
            inline:
              sharding-column: id
              algorithm-expression: ds$->{id % 2}
          key-generator:
            column: id
            type: SNOWFLAKE
          # 自定义分表算法
          tableStrategy:
            inline:
              sharding-column: id
              algorithm-expression: user_$->{id % 5}
      default-data-source-name: ds0
    props:
      sql.show: true

# inline 表达式
#spring.shardingsphere.sharding.tables.user.table-strategy.inline.sharding-column=id
#spring.shardingsphere.sharding.tables.user.table-strategy.inline.algorithm-expression=user_${id.longValue() % 4}
management:
  security:
    enabled: false
my:
  config:
    inline:
      name: lisi
      card: 123456
